{"version":3,"sources":["message_log_3/routes.cljs"],"mappings":";AAOA,GAAA,QAAAA,0CAAAC,iDAAAC;AAAA;AAAA,AAAA,8BAAA,iBAAAC,6BAAA,AAAAC,6CAAA,zHAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,uBAAA,6BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAiBO;;;AACjB,AAAAD,wEAAA,4DAAA;AAAA,AAAA,0FAAA,mDAAA;;AAEA,AAAKE,8BACH,6CAAA,mFAAA,IAAA,2CAAA,GAAA,oDAAA,QAAA,9OAACX;AAIH,6BAAA,7BAAMY,kEACHC;AADH,AAEE,6BAAA,AAAAC,tBAACC,sCAAkBJ,6BAAOE;;AAE5B,AAAA,+BAAA,uCAAAG,tEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,kEAAAF;;;AAAA,AAAA,CAAA,oEAAA,pEAAME,+EACDI;AADL,AAEE,OAACC,8CAAMC,mBAAc,6CAAA,mFAAA,AAAAd,hIAACe,gJAAOlB,qCAAQe;;;AAFvC,CAAA,uDAAA,vDAAMJ;;AAAN;AAAA,CAAA,iDAAA,WAAAC,5DAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAIA,gCAAA,hCAAMO,wEACHC;AADH,AAEE,IAAMC,QAAM,AAACC,gDAAQ,iHAAA,hHAAK,AAACC,eAAK,AAAA,yFAAUH;AAA1C,AACE,8BAAA,mFAAA,1GAACI,8NAA6CH;;AAElD,GAAA,QAAApC,0CAAAC,iDAAAuC;AAAA;AAAA,AAAA,AAASC,+BACP,AAACC,iBAAYR,8BAASlB;;AAExB,sCAAA,tCAAM2B,oFACHC;AADH,AAEE,OAAkBH,8EAAQ,AAACI,oHAAQD;;AAErC,mCAAA,nCAAME;AAAN,AAEE,OAAcL;;AAEhB,qBAAA,rBAACM,iFAEC,WAAKH;AAAL,AACE,OAACD,oCAAUC","names":["js/message-log-3","js/message-log-3.routes","js/message-log-3.routes.panels","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__49565","cljs.core/MultiFn","cljs.core.symbol","message-log-3.routes/panels","cljs.core/identity","message-log-3.routes/routes","message-log-3.routes/parse","url","cljs.core/deref","bidi.bidi/match-route","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","message-log-3.routes/url-for","seq49566","self__4852__auto__","cljs.core/seq","args","cljs.core.apply","bidi.bidi/path-for","cljs.core.into","message-log-3.routes/dispatch","route","panel","cljs.core.keyword","cljs.core/name","re-frame.core/dispatch","js/message-log-3.routes.history","message-log-3.routes/history","pushy.core/pushy","message-log-3.routes/navigate!","handler","message_log_3.routes.url_for","message-log-3.routes/start!","re-frame.core/reg-fx"],"sourcesContent":["(ns message-log-3.routes\n  (:require\n   [bidi.bidi :as bidi]\n   [pushy.core :as pushy]\n   [re-frame.core :as re-frame]\n   [message-log-3.events :as events]))\n\n(defmulti panels identity)\n(defmethod panels :default [] [:div \"No panel found for this route.\"])\n\n(def routes\n  (atom\n    [\"/\" {\"\"      :home\n          \"about\" :about}]))\n\n(defn parse\n  [url]\n  (bidi/match-route @routes url))\n\n(defn url-for\n  [& args]\n  (apply bidi/path-for (into [@routes] args)))\n\n(defn dispatch\n  [route]\n  (let [panel (keyword (str (name (:handler route)) \"-panel\"))]\n    (re-frame/dispatch [::events/set-active-panel panel])))\n\n(defonce history\n  (pushy/pushy dispatch parse))\n\n(defn navigate!\n  [handler]\n  (pushy/set-token! history (url-for handler)))\n\n(defn start!\n  []\n  (pushy/start! history))\n\n(re-frame/reg-fx\n  :navigate\n  (fn [handler]\n    (navigate! handler)))\n"]}